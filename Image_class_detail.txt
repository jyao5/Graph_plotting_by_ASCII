1.Type and structure
  for bitmap matrix, using vector<vector<char>>
  (int) row# and column#
  (double)utility
  vector<node> nodelist
  node{int node#, int row#, int column#}
  
2.behaviour
  2.1.initialize the bitmap with node set from Graph.
      assume the console is 70 characters wide.
      place each node in the median column, 7 rows away from each other
      push each node along with its coordinates(as in a struct"node") in a vector
      *note: struct node is of form: (int) node#; (int) rows; (int) columns
  2.2.draw directed lines with the arc set from Graph and node set store within
      In detail, for each node
        incoming arc from above, points to the top
        incoming arc from down , pintes to the bottom
        outgoing arc to above, sprouts from left
        outgoing arc to below, sprouts from right
    example
                 
  ^              |
  |       +------+
  |       |         
  |       V         
  +------[1]------  
          ^      |  1
          |      |  2
  + ------+      |  3
  |              |  4
  |       +------+  5
  |       |         6
  |       V         7
  +------[2]-----+
          ^      |
          |      |
          |      V
  2.3.print out the bitmap onto the console
  2.4.getter of the dimension and utility
  
3. algorithm layout
  2.1. parameters: vector<int> nodelist
    obtain from the nodelist number of the node 'n'
    create a vector<vector<char>> map of 71 * (7 * n)
    for each node, assign to it a coordinate map[n*7][35]
    create a node class with node#, coordinates, and push into vector<node>
    add the node along with the bracket(suppose # of node less than 10)
  2.2
